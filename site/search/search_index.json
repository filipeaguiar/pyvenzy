{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Pyvenzi","text":""},{"location":"#sistema-de-integracao-aghu-invenzi","title":"Sistema de Integra\u00e7\u00e3o AGHU - Invenzi","text":"<p>Esse sistema foi produzido utilizando a linguagem de programa\u00e7\u00e3o Python e tem por objetivo automatizar a cria\u00e7\u00e3o de cadastros de usu\u00e1rios, atualiza\u00e7\u00e3o dos mesmos, libera\u00e7\u00e3o e bloqueio de Pacientes utilizando dados do AGHU.</p> <p>A aplica\u00e7\u00e3o faz uso intensivo da API do Invenzi para manipular as entidades correspondentes.</p> <p>A documenta\u00e7\u00e3o das Classes e M\u00e9todos pode ser encontrada em Classes</p>"},{"location":"modules/accesslevel/","title":"accesslevel","text":""},{"location":"modules/accesslevel/#accesslevel","title":"AccessLevel","text":"<p>source</p> <pre><code>AccessLevel()\n</code></pre> <p>Classe que representa os n\u00edveis de acesso.</p> <p>Essa classe cont\u00e9m m\u00e9todos est\u00e1ticos para obter informa\u00e7\u00f5es sobre os n\u00edveis de acesso dispon\u00edveis, adicionar e remover n\u00edveis de acesso de um titular de cart\u00e3o.</p> <p>Attributes</p> <p>Nenhum atributo.</p> <p>Methods:</p>"},{"location":"modules/accesslevel/#getaccesslevels","title":".getAccessLevels","text":"<p>source</p> <pre><code>.getAccessLevels()\n</code></pre> <p>Retorna uma lista de n\u00edveis de acesso.</p> <p>Retorna uma lista contendo dicion\u00e1rios com informa\u00e7\u00f5es sobre os n\u00edveis de acesso dispon\u00edveis.</p> <p>Returns</p> <ul> <li>list  : Uma lista de dicion\u00e1rios contendo informa\u00e7\u00f5es sobre os n\u00edveis de acesso.</li> </ul>"},{"location":"modules/accesslevel/#getaccesslevel","title":".getAccessLevel","text":"<p>source</p> <pre><code>.getAccessLevel(\n   name: str\n)\n</code></pre> <p>Retorna o ID do n\u00edvel de acesso com base no nome fornecido.</p> <p>Args</p> <ul> <li>name (str) : O nome do n\u00edvel de acesso.</li> </ul> <p>Returns</p> <ul> <li>None  : O ID do n\u00edvel de acesso correspondente ou None se n\u00e3o for encontrado.</li> </ul>"},{"location":"modules/accesslevel/#addaccesslevel","title":".addAccessLevel","text":"<p>source</p> <pre><code>.addAccessLevel(\n   cardholder_CHID: int, accessLevel: str\n)\n</code></pre> <p>Adiciona um n\u00edvel de acesso ao titular do cart\u00e3o.</p> <p>Args</p> <ul> <li>cardholder_CHID (int) : O ID do titular do cart\u00e3o.</li> <li>accessLevel (str) : O n\u00edvel de acesso a ser adicionado.</li> </ul> <p>Returns</p> <ul> <li>bool  : True se o n\u00edvel de acesso foi adicionado com sucesso, False caso contr\u00e1rio.</li> </ul>"},{"location":"modules/accesslevel/#deleteaccesslevel","title":".deleteAccessLevel","text":"<p>source</p> <pre><code>.deleteAccessLevel(\n   cardholder_CHID: int, accessLevel: str\n)\n</code></pre> <p>Remove um n\u00edvel de acesso de um titular de cart\u00e3o.</p> <p>Args</p> <ul> <li>cardholder_CHID (int) : O ID do titular do cart\u00e3o.</li> <li>accessLevel (str) : O n\u00edvel de acesso a ser removido.</li> </ul> <p>Returns</p> <ul> <li>bool  : True se o n\u00edvel de acesso foi removido com sucesso, False caso contr\u00e1rio.</li> </ul>"},{"location":"modules/acompanhante/","title":"acompanhante","text":""},{"location":"modules/acompanhante/#acompanhante","title":"Acompanhante","text":"<p>source</p> <pre><code>Acompanhante()\n</code></pre> <p>Classe respons\u00e1vel por lidar com acompanhantes no sistema Invenzi.</p> <p>Methods:</p>"},{"location":"modules/acompanhante/#syncacompanhantes","title":".syncAcompanhantes","text":"<p>source</p> <pre><code>.syncAcompanhantes(\n   lastUpdated\n)\n</code></pre> <p>Sincroniza os acompanhantes com a base de dados, verificando se existem novos acompanhantes desde a \u00faltima atualiza\u00e7\u00e3o e criando-os no sistema Invenzi.</p> <p>Args</p> <ul> <li>lastUpdated (datetime) : Data e hora da \u00faltima atualiza\u00e7\u00e3o.</li> </ul> <p>Returns</p> <p>None</p>"},{"location":"modules/acompanhante/#getacompanhantebyid","title":".getAcompanhanteById","text":"<p>source</p> <pre><code>.getAcompanhanteById(\n   idNumber\n)\n</code></pre> <p>Obt\u00e9m um acompanhante pelo n\u00famero de identifica\u00e7\u00e3o.</p> <p>Args</p> <ul> <li>idNumber (str) : O n\u00famero de identifica\u00e7\u00e3o do acompanhante.</li> </ul> <p>Returns</p> <ul> <li>None  : Um dicion\u00e1rio contendo os dados do acompanhante, ou None se ocorrer um erro.</li> </ul> <p>Raises</p> <ul> <li>RequestException  : Exce\u00e7\u00e3o lan\u00e7ada em caso de erro na requisi\u00e7\u00e3o.</li> </ul>"},{"location":"modules/acompanhante/#createacompanhante","title":".createAcompanhante","text":"<p>source</p> <pre><code>.createAcompanhante(\n   acompanhante\n)\n</code></pre> <p>Cria um acompanhante no sistema.</p> <p>Args</p> <ul> <li>acompanhante (dict) : Dicion\u00e1rio contendo os dados do acompanhante.</li> </ul> <p>Returns</p> <ul> <li>dict  : Dicion\u00e1rio contendo a resposta da requisi\u00e7\u00e3o de cria\u00e7\u00e3o do acompanhante.     Em caso de erro, retorna False.</li> </ul>"},{"location":"modules/acompanhante/#linkacompanhante","title":".linkAcompanhante","text":"<p>source</p> <pre><code>.linkAcompanhante(\n   pacienteId, acompanhanteId\n)\n</code></pre> <p>Realiza o link entre um acompanhante e um paciente.</p> <p>Args</p> <ul> <li>pacienteId (int) : O ID do paciente.</li> <li>acompanhanteId (int) : O ID do acompanhante.</li> </ul> <p>Returns</p> <ul> <li>dict  : Um dicion\u00e1rio contendo a resposta da requisi\u00e7\u00e3o.</li> </ul> <p>Raises</p> <ul> <li>ConnectionError  : Erro de conex\u00e3o com o servidor.</li> <li>Exception  : Outros erros n\u00e3o especificados.</li> </ul>"},{"location":"modules/card/","title":"card","text":""},{"location":"modules/card/#card","title":"Card","text":"<p>source</p> <pre><code>Card()\n</code></pre> <p>Classe respons\u00e1vel por manipular os Cards (QR-Codes) de todos os tipos de usu\u00e1rio. Atualmente em desuso.</p> <p>Methods:</p>"},{"location":"modules/card/#createcard","title":".createCard","text":"<p>source</p> <pre><code>.createCard(\n   IdNumber\n)\n</code></pre> <p>Cria um novo cart\u00e3o para um usu\u00e1rio com base no n\u00famero de identifica\u00e7\u00e3o fornecido.</p> <p>Par\u00e2metros: - IdNumber (int): N\u00famero de identifica\u00e7\u00e3o do usu\u00e1rio.</p> <p>Retorna: - card (dict): Dicion\u00e1rio contendo as informa\u00e7\u00f5es do cart\u00e3o criado.</p> <p>Exce\u00e7\u00f5es: - Retorna None em caso de erro durante a cria\u00e7\u00e3o do cart\u00e3o.</p>"},{"location":"modules/card/#assigncardtouser","title":".assignCardToUser","text":"<p>source</p> <pre><code>.assignCardToUser(\n   colaboradorId, card\n)\n</code></pre> <p>Associa um cart\u00e3o a um usu\u00e1rio.</p> <p>Args</p> <ul> <li>colaboradorId (int) : O ID do colaborador.</li> <li>card (dict) : O dicion\u00e1rio contendo as informa\u00e7\u00f5es do cart\u00e3o.</li> </ul> <p>Returns</p> <ul> <li>bool  : True se o cart\u00e3o foi associado com sucesso, False caso contr\u00e1rio.</li> </ul>"},{"location":"modules/card/#getusercards","title":".getUserCards","text":"<p>source</p> <pre><code>.getUserCards(\n   colaboradorId\n)\n</code></pre> <p>Obt\u00e9m os cart\u00f5es de um usu\u00e1rio.</p> <p>Args</p> <ul> <li>colaboradorId (int) : O ID do colaborador.</li> </ul> <p>Returns</p> <ul> <li>list  : Uma lista de cart\u00f5es do usu\u00e1rio, ou None se ocorrer um erro.</li> </ul>"},{"location":"modules/card/#getcardbyid","title":".getCardById","text":"<p>source</p> <pre><code>.getCardById(\n   CardClearCode\n)\n</code></pre> <p>Obt\u00e9m um cart\u00e3o pelo seu c\u00f3digo de identifica\u00e7\u00e3o.</p> <p>Args</p> <ul> <li>CardClearCode (str) : O c\u00f3digo de identifica\u00e7\u00e3o do cart\u00e3o.</li> </ul> <p>Returns</p> <ul> <li>None  : Um dicion\u00e1rio contendo as informa\u00e7\u00f5es do cart\u00e3o encontrado ou None caso n\u00e3o seja encontrado.</li> </ul>"},{"location":"modules/card/#activatecard","title":".activateCard","text":"<p>source</p> <pre><code>.activateCard(\n   card\n)\n</code></pre> <p>Ativa um cart\u00e3o.</p> <p>:param card: O dicion\u00e1rio que representa o cart\u00e3o a ser ativado. :type card: dict</p>"},{"location":"modules/colaborador/","title":"colaborador","text":""},{"location":"modules/colaborador/#colaborador","title":"Colaborador","text":"<p>source</p> <pre><code>Colaborador()\n</code></pre> <p>Classe que representa um colaborador.</p> <p>Essa classe cont\u00e9m m\u00e9todos est\u00e1ticos para buscar, atualizar e criar colaboradores. Tamb\u00e9m possui m\u00e9todos para ativar e desativar usu\u00e1rios.</p> <p>Atributos: Nenhum atributo definido.</p> <p>Methods:</p>"},{"location":"modules/colaborador/#getcolaboradorbyidnumber","title":".getColaboradorByIdNumber","text":"<p>source</p> <pre><code>.getColaboradorByIdNumber(\n   IdNumber\n)\n</code></pre> <p>Retorna as informa\u00e7\u00f5es do colaborador com base no n\u00famero de identifica\u00e7\u00e3o.</p> <p>Par\u00e2metros: - IdNumber (str): O n\u00famero de identifica\u00e7\u00e3o do colaborador.</p> <p>Retorna: - dict: Um dicion\u00e1rio contendo as informa\u00e7\u00f5es do colaborador.</p> <p>Exce\u00e7\u00f5es: - Exception: Caso ocorra algum erro ao buscar o colaborador.</p>"},{"location":"modules/colaborador/#getallupdates","title":".getAllUpdates","text":"<p>source</p> <pre><code>.getAllUpdates(\n   lastUpdated\n)\n</code></pre> <p>Retorna todos os colaboradores atualizados desde a \u00faltima data fornecida.</p> <p>Par\u00e2metros: lastUpdated (str): A data da \u00faltima atualiza\u00e7\u00e3o no formato 'YYYY-MM-DD'.</p> <p>Retorna: list: Uma lista contendo os colaboradores atualizados.</p> <p>Exemplo:</p> <p>getAllUpdates('2022-01-01') ['colaborador1', 'colaborador2', 'colaborador3']</p>"},{"location":"modules/colaborador/#getcolaboradores","title":".getColaboradores","text":"<p>source</p> <pre><code>.getColaboradores(\n   colaboradores\n)\n</code></pre> <p>Retorna uma lista de colaboradores cujo CHType seja igual a 3 [Colaborador].</p> <p>Args</p> <ul> <li>colaboradores (list) : Lista de colaboradores.</li> </ul> <p>Returns</p> <ul> <li>list  : Lista de colaboradores cujo CHType seja igual a 3 [Colaborador].</li> </ul>"},{"location":"modules/colaborador/#updatecolaboradores","title":".updateColaboradores","text":"<p>source</p> <pre><code>.updateColaboradores(\n   colaboradores\n)\n</code></pre> <p>Atualiza os colaboradores no sistema.</p> <p>Args</p> <ul> <li>colaboradores (list) : Uma lista de dicion\u00e1rios, obtidos no Banco de Dados, contendo as informa\u00e7\u00f5es dos colaboradores.</li> </ul> <p>Returns</p> <ul> <li>list  : A lista de colaboradores atualizada.</li> </ul>"},{"location":"modules/colaborador/#updatecolaborador","title":".updateColaborador","text":"<p>source</p> <pre><code>.updateColaborador(\n   colaboradorInvenzi, colaboradorAGHU\n)\n</code></pre> <p>Atualiza um colaborador no sistema.</p> <p>Args</p> <ul> <li>colaboradorInvenzi (dict) : Um dicion\u00e1rio contendo as informa\u00e7\u00f5es do colaborador no Invenzi.</li> <li>colaboradorAGHU (dict) : Um dicion\u00e1rio contendo as informa\u00e7\u00f5es do colaborador no AGHU.</li> </ul> <p>Returns</p> <ul> <li>bool  : True se o colaborador foi atualizado com sucesso, False caso contr\u00e1rio.</li> </ul>"},{"location":"modules/colaborador/#createcolaborador","title":".createColaborador","text":"<p>source</p> <pre><code>.createColaborador(\n   colaborador\n)\n</code></pre> <p>Cria um colaborador no sistema.</p> <p>Args</p> <ul> <li>colaborador (dict) : Um dicion\u00e1rio contendo as informa\u00e7\u00f5es do colaborador.</li> </ul> <p>Returns</p> <ul> <li>dict  : Um dicion\u00e1rio contendo as informa\u00e7\u00f5es do colaborador criado.</li> </ul>"},{"location":"modules/colaborador/#deactivateuser","title":".deactivateUser","text":"<p>source</p> <pre><code>.deactivateUser(\n   user\n)\n</code></pre> <p>Desativa um usu\u00e1rio.</p> <p>Args</p> <ul> <li>user (dict) : O usu\u00e1rio a ser desativado.</li> </ul> <p>Returns</p> <ul> <li>bool  : True se o usu\u00e1rio foi desativado com sucesso, False caso contr\u00e1rio.</li> </ul>"},{"location":"modules/colaborador/#activateuser","title":".activateUser","text":"<p>source</p> <pre><code>.activateUser(\n   user\n)\n</code></pre> <p>Ativa um usu\u00e1rio.</p> <p>Args</p> <ul> <li>user (dict) : O usu\u00e1rio a ser ativado.</li> </ul> <p>Returns</p> <ul> <li>bool  : True se o usu\u00e1rio foi ativado com sucesso, False caso contr\u00e1rio.</li> </ul>"},{"location":"modules/combolists/","title":"combolists","text":""},{"location":"modules/combolists/#combolist","title":"ComboList","text":"<p>source</p> <pre><code>ComboList()\n</code></pre> <p>Classe respons\u00e1vel por lidar com as listas de combina\u00e7\u00e3o no sistema Invenzi.</p> <p>Methods:</p>"},{"location":"modules/combolists/#getcombolists","title":".getComboLists","text":"<p>source</p> <pre><code>.getComboLists()\n</code></pre> <p>Obt\u00e9m as listas de combina\u00e7\u00e3o do sistema.</p> <p>Returns</p> <ul> <li>list  : Uma lista de listas de combina\u00e7\u00e3o, ou None se ocorrer um erro.</li> </ul>"},{"location":"modules/combolists/#getindex","title":".getIndex","text":"<p>source</p> <pre><code>.getIndex(\n   CHType: int, comboList: str, text: str\n)\n</code></pre> <p>Obt\u00e9m o \u00edndice de um item de uma lista de combina\u00e7\u00e3o.</p> <p>Args</p> <ul> <li>CHType (int) : O tipo de cart\u00e3o.</li> <li>comboList (str) : O ID da lista de combina\u00e7\u00e3o.</li> <li>text (str) : O texto do item.</li> </ul> <p>Returns</p> <ul> <li>None  : O \u00edndice do item, ou None se n\u00e3o for encontrado.</li> </ul>"},{"location":"modules/combolists/#_is_match","title":"._is_match","text":"<p>source</p> <pre><code>._is_match(\n   item, CHType, comboList, text\n)\n</code></pre> <p>Verifica se um item de uma lista de combina\u00e7\u00e3o \u00e9 o item procurado.</p> <p>Args</p> <ul> <li>item (dict) : O item da lista de combina\u00e7\u00e3o.</li> <li>CHType (int) : O tipo de cart\u00e3o.</li> <li>comboList (str) : O ID da lista de combina\u00e7\u00e3o.</li> <li>text (str) : O texto do item.</li> </ul> <p>Returns</p> <ul> <li>bool  : True se for o item procurado, False caso contr\u00e1rio.</li> </ul>"},{"location":"modules/database/","title":"database","text":""},{"location":"modules/database/#database","title":"DataBase","text":"<p>source</p> <pre><code>DataBase()\n</code></pre> <p>Classe respons\u00e1vel por lidar com o banco de dados.</p> <p>Methods:</p>"},{"location":"modules/database/#gettime","title":".getTime","text":"<p>source</p> <pre><code>.getTime()\n</code></pre> <p>Obt\u00e9m a data e hora atual do banco de dados.</p> <p>Returns</p> <ul> <li>str  : A data e hora atual do banco de dados.</li> </ul>"},{"location":"modules/database/#formatedquery","title":".formatedquery","text":"<p>source</p> <pre><code>.formatedquery(\n   query: str, date: tuple\n)\n</code></pre> <p>Formata uma query SQL.</p> <p>Args</p> <ul> <li>query (str) : A query SQL.</li> <li>date (tuple) : A data e hora.</li> </ul> <p>Returns</p> <ul> <li>str  : A query SQL formatada.</li> </ul>"},{"location":"modules/database/#readsql","title":".readSQL","text":"<p>source</p> <pre><code>.readSQL(\n   file_name\n)\n</code></pre> <p>L\u00ea um arquivo SQL.</p> <p>Args</p> <ul> <li>file_name (str) : O nome do arquivo SQL.</li> </ul> <p>Returns</p> <ul> <li>str  : O conte\u00fado do arquivo SQL.</li> </ul>"},{"location":"modules/database/#runquery","title":".runQuery","text":"<p>source</p> <pre><code>.runQuery(\n   query\n)\n</code></pre> <p>Executa uma query SQL.</p> <p>Args</p> <ul> <li>query (str) : A query SQL.</li> </ul> <p>Returns</p> <ul> <li>list  : O resultado da query SQL.</li> </ul>"},{"location":"modules/estudante/","title":"estudante","text":""},{"location":"modules/estudante/#estudante","title":"Estudante","text":"<p>source</p> <pre><code>Estudante()\n</code></pre> <p>Classe respons\u00e1vel por lidar com estudantes no sistema Invenzi.</p> <p>Methods:</p>"},{"location":"modules/estudante/#getestudantebyidnumber","title":".getEstudanteByIdNumber","text":"<p>source</p> <pre><code>.getEstudanteByIdNumber(\n   IdNumber\n)\n</code></pre> <p>Obt\u00e9m um estudante pelo n\u00famero de identifica\u00e7\u00e3o.</p> <p>Args</p> <ul> <li>IdNumber (int) : O n\u00famero de identifica\u00e7\u00e3o do estudante.</li> </ul> <p>Returns</p> <ul> <li>dict  : O estudante, ou None se n\u00e3o for encontrado.</li> </ul>"},{"location":"modules/estudante/#getestudantes","title":".getEstudantes","text":"<p>source</p> <pre><code>.getEstudantes(\n   colaboradores\n)\n</code></pre> <p>Obt\u00e9m os estudantes de uma lista de colaboradores.</p> <p>Args</p> <ul> <li>colaboradores (list) : A lista de colaboradores.</li> </ul> <p>Returns</p> <ul> <li>list  : A lista de estudantes.</li> </ul>"},{"location":"modules/estudante/#updateestudantes","title":".updateEstudantes","text":"<p>source</p> <pre><code>.updateEstudantes(\n   estudantes\n)\n</code></pre> <p>Atualiza os estudantes no sistema Invenzi.</p> <p>Args</p> <ul> <li>estudantes (list) : A lista de estudantes.</li> </ul> <p>Returns</p> <ul> <li>list  : A lista de estudantes atualizados.</li> </ul>"},{"location":"modules/estudante/#updateestudante","title":".updateEstudante","text":"<p>source</p> <pre><code>.updateEstudante(\n   estudanteInvenzi, estudanteAGHU\n)\n</code></pre> <p>Atualiza um estudante no sistema Invenzi.</p> <p>Args</p> <ul> <li>estudanteInvenzi (dict) : O estudante no sistema Invenzi.</li> <li>estudanteAGHU (dict) : O estudante no sistema AGHU.</li> </ul> <p>Returns</p> <ul> <li>bool  : True se o estudante foi atualizado, False caso contr\u00e1rio.</li> </ul>"},{"location":"modules/estudante/#createestudante","title":".createEstudante","text":"<p>source</p> <pre><code>.createEstudante(\n   estudante\n)\n</code></pre> <p>Cria um estudante no sistema Invenzi.</p> <p>Args</p> <ul> <li>estudante (dict) : O estudante.</li> </ul> <p>Returns</p> <ul> <li>None  : O estudante criado, ou None se ocorrer um erro.</li> </ul>"},{"location":"modules/helperfunctions/","title":"helperfunctions","text":""},{"location":"modules/helperfunctions/#helper","title":"helper","text":"<p>source</p> <pre><code>helper()\n</code></pre> <p>Methods:</p>"},{"location":"modules/helperfunctions/#printred","title":".printRed","text":"<p>source</p> <pre><code>.printRed(\n   text\n)\n</code></pre>"},{"location":"modules/helperfunctions/#printgreen","title":".printGreen","text":"<p>source</p> <pre><code>.printGreen(\n   text\n)\n</code></pre>"},{"location":"modules/helperfunctions/#printorange","title":".printOrange","text":"<p>source</p> <pre><code>.printOrange(\n   text\n)\n</code></pre>"},{"location":"modules/helperfunctions/#formatdate","title":".formatDate","text":"<p>source</p> <pre><code>.formatDate()\n</code></pre>"},{"location":"modules/helperfunctions/#encrypt","title":".encrypt","text":"<p>source</p> <pre><code>.encrypt(\n   number\n)\n</code></pre>"},{"location":"modules/helperfunctions/#decrypt","title":".decrypt","text":"<p>source</p> <pre><code>.decrypt(\n   number\n)\n</code></pre>"},{"location":"modules/helperfunctions/#updatetime","title":".updateTime","text":"<p>source</p> <pre><code>.updateTime(\n   updatedDate\n)\n</code></pre> <p>Atualiza a data de atualiza\u00e7\u00e3o do sistema.</p> <p>Args</p> <ul> <li>updatedDate (str) : A data de atualiza\u00e7\u00e3o.</li> </ul>"},{"location":"modules/paciente/","title":"paciente","text":""},{"location":"modules/paciente/#paciente","title":"Paciente","text":"<p>source</p> <pre><code>Paciente()\n</code></pre> <p>Classe respons\u00e1vel por lidar com pacientes no sistema Invenzi.</p> <p>Methods:</p>"},{"location":"modules/paciente/#getpacientebyidnumber","title":".getPacienteByIdNumber","text":"<p>source</p> <pre><code>.getPacienteByIdNumber(\n   IdNumber\n)\n</code></pre> <p>Obt\u00e9m um paciente pelo n\u00famero de identifica\u00e7\u00e3o.</p> <p>Args</p> <ul> <li>IdNumber (int) : O n\u00famero de identifica\u00e7\u00e3o do paciente.</li> </ul> <p>Returns</p> <ul> <li>dict  : O paciente, ou None se n\u00e3o for encontrado.</li> </ul>"},{"location":"modules/paciente/#getpacientes","title":".getPacientes","text":"<p>source</p> <pre><code>.getPacientes(\n   lastUpdated\n)\n</code></pre> <p>Obt\u00e9m os pacientes desde a \u00faltima atualiza\u00e7\u00e3o.</p> <p>Args</p> <ul> <li>lastUpdated (str) : A data da \u00faltima atualiza\u00e7\u00e3o.</li> </ul> <p>Returns</p> <ul> <li>list  : Os pacientes.</li> </ul>"},{"location":"modules/paciente/#updatepacientes","title":".updatePacientes","text":"<p>source</p> <pre><code>.updatePacientes(\n   pacientes\n)\n</code></pre> <p>Atualiza os pacientes no sistema Invenzi.</p> <p>Args</p> <ul> <li>pacientes (list) : A lista de pacientes.</li> </ul>"},{"location":"modules/paciente/#updatepaciente","title":".updatePaciente","text":"<p>source</p> <pre><code>.updatePaciente(\n   pacienteInvenzi, pacienteAGHU\n)\n</code></pre> <p>Atualiza um paciente no sistema Invenzi.</p> <p>Args</p> <ul> <li>pacienteInvenzi (dict) : O paciente no sistema Invenzi.</li> <li>pacienteAGHU (dict) : O paciente no sistema AGHU.</li> </ul>"},{"location":"modules/paciente/#createpaciente","title":".createPaciente","text":"<p>source</p> <pre><code>.createPaciente(\n   paciente\n)\n</code></pre> <p>Cria um paciente no sistema Invenzi.</p> <p>Args</p> <ul> <li>paciente (dict) : O paciente.</li> </ul> <p>Returns</p> <ul> <li>dict  : O paciente criado, ou None se n\u00e3o foi poss\u00edvel criar.</li> </ul>"},{"location":"modules/paciente/#getliberacoes","title":".getLiberacoes","text":"<p>source</p> <pre><code>.getLiberacoes(\n   lastUpdated\n)\n</code></pre> <p>Obt\u00e9m as libera\u00e7\u00f5es de pacientes desde a \u00faltima atualiza\u00e7\u00e3o.</p> <p>Args</p> <ul> <li>lastUpdated (str) : A data da \u00faltima atualiza\u00e7\u00e3o.</li> </ul> <p>Returns</p> <ul> <li>list  : As libera\u00e7\u00f5es de pacientes.</li> </ul>"},{"location":"modules/paciente/#getliberacoesdiarias","title":".getLiberacoesDiarias","text":"<p>source</p> <pre><code>.getLiberacoesDiarias()\n</code></pre> <p>Obt\u00e9m as libera\u00e7\u00f5es de pacientes do dia.</p> <p>Returns</p> <ul> <li>list  : As libera\u00e7\u00f5es de pacientes.</li> </ul>"},{"location":"modules/paciente/#ativarpaciente","title":".ativarPaciente","text":"<p>source</p> <pre><code>.ativarPaciente(\n   idNumber: int\n)\n</code></pre> <p>Ativa um paciente no sistema Invenzi.</p> <p>Args</p> <ul> <li>idNumber (int) : O n\u00famero de identifica\u00e7\u00e3o do paciente.</li> </ul> <p>Returns</p> <ul> <li>bool  : True se o paciente foi ativado, False se n\u00e3o.</li> </ul>"},{"location":"modules/paciente/#desativarpaciente","title":".desativarPaciente","text":"<p>source</p> <pre><code>.desativarPaciente(\n   idNumber: int\n)\n</code></pre> <p>Desativa um paciente no sistema Invenzi.</p> <p>Args</p> <ul> <li>idNumber (int) : O n\u00famero de identifica\u00e7\u00e3o do paciente.</li> </ul>"},{"location":"modules/settings/","title":"settings","text":""},{"location":"modules/settings/#init","title":"init","text":"<p>source</p> <pre><code>.init()\n</code></pre> <p>Inicializa as vari\u00e1veis de ambiente.</p>"}]}